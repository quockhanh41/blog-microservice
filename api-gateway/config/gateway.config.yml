http:
  port: 8080
admin:
  port: 9876
  host: localhost
apiEndpoints:
  users:
    paths: '/users/*'
  posts:
    paths: '/posts/*'
  feed:
    paths: '/feed/*'
  auth:
    paths: '/auth/*'
serviceEndpoints:
  userService:
    url: 'http://user-service:3001'
  postService:
    url: 'http://post-service:3002'
  feedService:
    url: 'http://feed-service:3003'
policies:
  - cors
  - jwt
  - proxy
  - rate-limit
  - log
pipelines:
  users:
    apiEndpoints:
      - users
    policies:
      - cors:
          action:
            origin: '*'
            methods: 'GET,POST,PUT,DELETE'
            allowedHeaders: 'Content-Type,Authorization'
            preflightContinue: false
      - jwt:
          action:
            secretOrPublicKey: 'your-super-secret-jwt-key-change-in-production'
            checkCredentialExistence: false
      - proxy:
          action:
            serviceEndpoint: userService
            changeOrigin: true
            stripPath: false
      - log:
          action:
            message: '${req.method} ${req.originalUrl}'  posts:
    apiEndpoints:
      - posts
    policies:
      - cors:
          action:
            origin: '*'
            methods: 'GET,POST,PUT,DELETE'
            allowedHeaders: 'Content-Type,Authorization'
            preflightContinue: false
      - jwt:
          action:
            secretOrPublicKey: 'your-super-secret-jwt-key-change-in-production'
            checkCredentialExistence: false
            passThrough: true
      - proxy:
          action:
            serviceEndpoint: postService
            changeOrigin: true
            stripPath: false
      - log:
          action:
            message: '${req.method} ${req.originalUrl}'
  feed:
    apiEndpoints:
      - feed
    policies:
      - cors:
          action:
            origin: '*'
            methods: 'GET,POST,PUT,DELETE'
            allowedHeaders: 'Content-Type,Authorization'
            preflightContinue: false
      - jwt:
          action:
            secretOrPublicKey: 'your-super-secret-jwt-key-change-in-production'
            checkCredentialExistence: false
            passThrough: true
      - proxy:
          action:
            serviceEndpoint: feedService
            changeOrigin: true
            stripPath: false
      - log:
          action:
            message: '${req.method} ${req.originalUrl}'
  auth:
    apiEndpoints:
      - auth
    policies:
      - cors:
          action:
            origin: '*'
            methods: 'GET,POST,PUT,DELETE'
            allowedHeaders: 'Content-Type,Authorization'
            preflightContinue: false
      - proxy:
          action:
            serviceEndpoint: userService
            changeOrigin: true
            stripPath: false
      - log:
          action:
            message: '${req.method} ${req.originalUrl}'
