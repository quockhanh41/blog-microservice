# Render deployment configuration for Blog Microservices
services:
  # User Service
  - type: web
    name: user-service
    env: node
    region: singapore
    plan: standard
    numInstances: 1
    branch: main
    rootDir: user-service
    buildCommand: npm install && npm run prisma:generate && npm run build
    startCommand: node dist/index.js
    healthCheckPath: /health
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 3001      
      - key: DATABASE_URL
        sync: false # Use the PostgreSQL connection string from Render dashboard
      - key: SERVICE_ADDRESS
        value: user-service
      - key: KAFKA_BROKERS
        sync: false # Use Confluent Cloud or other Kafka service URL
      - key: CONFLUENT_API_KEY
        sync: false
      - key: CONFLUENT_API_SECRET
        sync: false
      - key: JWT_SECRET
        generateValue: true # Generates a random value for security
      - key: PRISMA_BINARY_TARGETS
        value: "native,rhel-openssl-1.0.x"

  # Post Service
  - type: web
    name: post-service
    env: node
    region: singapore
    plan: standard
    numInstances: 1
    branch: main
    rootDir: post-service
    buildCommand: npm install && npm run prisma:generate && npm run build
    startCommand: node dist/index.js
    healthCheckPath: /health
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 3002
      - key: DATABASE_URL
        sync: false # Use the PostgreSQL connection string from Render dashboard
      - key: USER_SERVICE_URL
        value: https://user-service.onrender.com      
      - key: SERVICE_ADDRESS
        value: post-service
      - key: KAFKA_BROKERS
        sync: false # Use Confluent Cloud or other Kafka service URL
      - key: CONFLUENT_API_KEY
        sync: false
      - key: CONFLUENT_API_SECRET
        sync: false
      - key: PRISMA_BINARY_TARGETS
        value: "native,rhel-openssl-1.0.x"

  # Feed Service
  - type: web
    name: feed-service
    env: node
    region: singapore
    plan: standard
    numInstances: 1
    branch: main
    rootDir: feed-service
    buildCommand: npm install && npm run build
    startCommand: node dist/index.js
    healthCheckPath: /health
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 3003
      - key: REDIS_URL
        sync: false # Use Redis Cloud or other Redis service URL
      - key: USER_SERVICE_URL
        value: https://user-service.onrender.com
      - key: POST_SERVICE_URL
        value: https://post-service.onrender.com
      - key: SERVICE_ADDRESS
        value: feed-service

  # API Gateway
  - type: web
    name: api-gateway
    env: node
    region: singapore
    plan: standard
    numInstances: 1
    branch: main
    rootDir: api-gateway
    buildCommand: npm install
    startCommand: node server.js
    healthCheckPath: /health
    envVars:
      - key: NODE_ENV
        value: production
      - key: JWT_SECRET
        fromService:
          type: web
          name: user-service
          envVarKey: JWT_SECRET
      - key: USER_SERVICE_URL
        value: https://user-service.onrender.com
      - key: POST_SERVICE_URL
        value: https://post-service.onrender.com
      - key: FEED_SERVICE_URL
        value: https://feed-service.onrender.com

  # Frontend
  - type: web
    name: frontend
    env: node
    region: singapore
    plan: standard
    branch: main
    rootDir: Frontend
    buildCommand: npm install && npm run build
    startCommand: node .next/standalone/server.js
    envVars:
      - key: NODE_ENV
        value: production
      - key: NEXT_TELEMETRY_DISABLED
        value: 1
      - key: HOSTNAME
        value: 0.0.0.0
      - key: PORT
        value: 3000
      - key: NEXT_PUBLIC_API_URL
        value: https://api-gateway.onrender.com

# Database services
databases:
  # User Service Database
  - name: user-service-db
    plan: standard
    type: postgres
    region: singapore
    ipAllowList: [] # Allow connections from anywhere

  # Post Service Database
  - name: post-service-db
    plan: standard
    type: postgres
    region: singapore
    ipAllowList: [] # Allow connections from anywhere
